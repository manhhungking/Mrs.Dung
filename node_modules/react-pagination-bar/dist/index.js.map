{"version":3,"file":"index.js","sources":["../node_modules/classnames/index.js","../src/Pagination.tsx"],"sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport classNames from 'classnames';\r\nimport './index.css';\r\n\r\ntype RPBPagerState = Omit<RPBPaginationProps, 'itemsPerPage'> & {\r\n  totalItems: number;\r\n  currentPage: number;\r\n  pageSize: number;\r\n  totalPages: number;\r\n  startPage: number;\r\n  endPage: number;\r\n  pages: number[];\r\n};\r\n\r\ntype RPBClassNamesCustomization = {\r\n  rpbRootClassName?: string;\r\n  rpbItemClassName?: string;\r\n  rpbItemClassNameActive?: string;\r\n  rpbItemClassNameDisable?: string;\r\n  rpbProgressClassName?: string;\r\n  rpbGoItemClassName?: string;\r\n};\r\n\r\ntype RPBPaginationProps = {\r\n  onPage小hange: (pageNumber: number) => void;\r\n  initialPage?: number;\r\n  totalItems: number;\r\n  itemsPerPage: number;\r\n  startLabel?: string;\r\n  prevLabel?: string;\r\n  nextLabel?: string;\r\n  endLabel?: string;\r\n  pageNeighbours?: number;\r\n  withProgressBar?: boolean;\r\n  onlyPageNumbers?: boolean;\r\n  onlyPaginationButtons?: boolean;\r\n  withGoToInput?: boolean;\r\n  customClassNames?: RPBClassNamesCustomization;\r\n  withDebug?: boolean;\r\n};\r\n\r\nexport const Pagination: React.FC<RPBPaginationProps> = ({\r\n  onPage小hange,\r\n  initialPage = 1,\r\n  totalItems,\r\n  itemsPerPage = 10,\r\n  startLabel = 'Start',\r\n  prevLabel = 'Prev',\r\n  nextLabel = 'Next',\r\n  endLabel = 'End',\r\n  pageNeighbours = 4,\r\n  withProgressBar = false,\r\n  onlyPageNumbers = false,\r\n  withGoToInput = false,\r\n  onlyPaginationButtons = false,\r\n  withDebug = false,\r\n  customClassNames = {},\r\n}) => {\r\n  const [pager, setPager] = useState<RPBPagerState>();\r\n  const [currentPage, setCurrentPage] = useState<number>(initialPage);\r\n  const [goToInputValue, setGoToInputValue] = useState<string>('');\r\n\r\n  const styleClassName = {\r\n    rpbRootClassName: customClassNames.rpbRootClassName || 'rpb-root',\r\n    rpbItemClassName: customClassNames.rpbItemClassName || 'rpb-item',\r\n    rpbItemClassNameActive:\r\n      customClassNames.rpbItemClassNameActive || 'rpb-item--active',\r\n    rpbItemClassNameDisable:\r\n      customClassNames.rpbItemClassNameDisable || 'rpb-item--disabled',\r\n    rpbProgressClassName:\r\n      customClassNames.rpbProgressClassName || 'rpb-progress',\r\n    rpbGoItemClassName: customClassNames.rpbGoItemClassName || 'rpb-go-item',\r\n  } as Required<RPBClassNamesCustomization>;\r\n\r\n  /**\r\n   * Set new page when currentPage updates\r\n   */\r\n  useEffect(() => {\r\n    setPage(currentPage);\r\n    if (withDebug) {\r\n      console.log('Current pager state: ', pager);\r\n    }\r\n  }, [currentPage]);\r\n\r\n  const setPage = (page: number): void => {\r\n    if (\r\n      page < 1 ||\r\n      (pager && page > pager.totalPages) ||\r\n      typeof page !== 'number' ||\r\n      isNaN(page)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // Set new current page\r\n    setCurrentPage(page);\r\n\r\n    // Update pager\r\n    getPager();\r\n\r\n    // Send new page outside component\r\n    onPage小hange(page);\r\n  };\r\n\r\n  const getPager = useCallback((): void => {\r\n    const totalPages = Math.ceil(totalItems / itemsPerPage);\r\n\r\n    let startPage: number;\r\n    let endPage: number;\r\n\r\n    if (totalPages <= pageNeighbours * 2 + 1) {\r\n      startPage = 1;\r\n      endPage = totalPages;\r\n    } else {\r\n      if (currentPage <= pageNeighbours) {\r\n        startPage = 1;\r\n        endPage = pageNeighbours * 2 + 1;\r\n      } else if (currentPage + pageNeighbours >= totalPages) {\r\n        startPage = totalPages - pageNeighbours * 2;\r\n        endPage = totalPages;\r\n      } else {\r\n        startPage = currentPage - pageNeighbours;\r\n        endPage = currentPage + pageNeighbours;\r\n      }\r\n    }\r\n\r\n    const pages = [...Array(endPage + 1 - startPage).keys()].map(\r\n      (i) => startPage + i\r\n    );\r\n\r\n    setPager({\r\n      totalItems: totalItems,\r\n      currentPage: currentPage,\r\n      pageSize: itemsPerPage,\r\n      totalPages: totalPages,\r\n      startPage: startPage,\r\n      endPage: endPage,\r\n      pages: pages,\r\n      endLabel,\r\n      startLabel,\r\n      prevLabel,\r\n      nextLabel,\r\n      onPage小hange,\r\n      pageNeighbours,\r\n      withProgressBar,\r\n      onlyPageNumbers,\r\n      withGoToInput,\r\n      onlyPaginationButtons,\r\n      withDebug,\r\n      initialPage,\r\n    });\r\n  }, [currentPage, itemsPerPage, totalItems]);\r\n\r\n  const onGoToPageSubmitHandle = (): void => {\r\n    const value = Number(goToInputValue);\r\n\r\n    if (pager) {\r\n      if (value <= 0) {\r\n        setPage(1);\r\n      } else if (value > pager.totalPages) {\r\n        setPage(pager.totalPages);\r\n      } else {\r\n        setPage(value);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (pager && totalItems > itemsPerPage) {\r\n    return (\r\n      <nav className={styleClassName.rpbRootClassName}>\r\n        <ul\r\n          id=\"rpb-pagination\"\r\n          aria-label={`Pagination Navigation, Current Page ${pager.currentPage}`}>\r\n          {!onlyPageNumbers && (\r\n            <>\r\n              <li>\r\n                <button\r\n                  className={classNames({\r\n                    [styleClassName.rpbItemClassName]: true,\r\n                    [styleClassName.rpbItemClassNameDisable]:\r\n                      pager.currentPage === 1,\r\n                  })}\r\n                  aria-label={'Start'}\r\n                  onClick={() => setPage(1)}>\r\n                  {startLabel}\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  className={classNames({\r\n                    [styleClassName.rpbItemClassName]: true,\r\n                    [styleClassName.rpbItemClassNameDisable]:\r\n                      pager.currentPage === 1,\r\n                  })}\r\n                  aria-label={'Prev'}\r\n                  onClick={() => setPage(pager.currentPage - 1)}>\r\n                  {prevLabel}\r\n                </button>\r\n              </li>\r\n            </>\r\n          )}\r\n\r\n          {!onlyPaginationButtons &&\r\n            pager.pages &&\r\n            pager.pages.map((page, index) => (\r\n              <li\r\n                key={index}\r\n                data-page={page}\r\n                data-current={pager.currentPage === page}>\r\n                <button\r\n                  aria-label={`Go to Page ${page}`}\r\n                  aria-current={pager.currentPage === page}\r\n                  onClick={() => setPage(page)}\r\n                  className={classNames({\r\n                    [styleClassName.rpbItemClassName]: true,\r\n                    [styleClassName.rpbItemClassNameActive]:\r\n                      pager.currentPage === page,\r\n                  })}>\r\n                  {page}\r\n                </button>\r\n              </li>\r\n            ))}\r\n          {!onlyPageNumbers && (\r\n            <>\r\n              <li>\r\n                <button\r\n                  onClick={() => setPage(pager.currentPage + 1)}\r\n                  aria-label=\"Next\"\r\n                  className={classNames({\r\n                    [styleClassName.rpbItemClassName]: true,\r\n                    [styleClassName.rpbItemClassNameDisable]:\r\n                      pager.currentPage === pager.totalPages,\r\n                  })}>\r\n                  {nextLabel}\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  className={classNames({\r\n                    [styleClassName.rpbItemClassName]: true,\r\n                    [styleClassName.rpbItemClassNameDisable]:\r\n                      pager.currentPage === pager.totalPages,\r\n                  })}\r\n                  aria-label={'End'}\r\n                  onClick={() => setPage(pager.totalPages)}>\r\n                  {endLabel}\r\n                </button>\r\n              </li>\r\n            </>\r\n          )}\r\n          {withGoToInput && (\r\n            <>\r\n              <li>\r\n                <div className={styleClassName.rpbGoItemClassName}>\r\n                  <input\r\n                    type=\"number\"\r\n                    onChange={(e) => setGoToInputValue(e.target.value)}\r\n                  />\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  className={styleClassName.rpbItemClassName}\r\n                  onClick={onGoToPageSubmitHandle}>\r\n                  Go\r\n                </button>\r\n              </li>\r\n            </>\r\n          )}\r\n        </ul>\r\n        {withProgressBar && (\r\n          <div\r\n            role=\"progressbar\"\r\n            aria-valuenow={\r\n              pager.currentPage !== 1\r\n                ? Math.round((pager.currentPage / pager.totalPages) * 100)\r\n                : 0\r\n            }\r\n            aria-valuemin={0}\r\n            aria-valuemax={100}\r\n            aria-labelledby=\"rpb-pagination\"\r\n            className={styleClassName.rpbProgressClassName}\r\n            style={{\r\n              width:\r\n                pager.currentPage !== 1\r\n                  ? Math.round((pager.currentPage / pager.totalPages) * 100) +\r\n                    '%'\r\n                  : 0 + '%',\r\n            }}></div>\r\n        )}\r\n      </nav>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n"],"names":["useState","useEffect","useCallback","React","classNames"],"mappings":"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"}